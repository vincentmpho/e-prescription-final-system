// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hms_api.Data;

namespace hms_api.Migrations
{
    [DbContext(typeof(hms_apiContext))]
    partial class hms_apiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hms_api.Models.Doctor", b =>
                {
                    b.Property<string>("DoctorNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DoctorContact")
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("DoctorEmail")
                        .HasColumnType("nvarchar(125)");

                    b.Property<int>("DoctorHCRN")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(125)");

                    b.Property<int>("DoctorPracticeNumber")
                        .HasColumnType("int");

                    b.Property<string>("DoctorQualification")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DoctorSurname")
                        .HasColumnType("nvarchar(125)");

                    b.HasKey("DoctorNumber");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("hms_api.Models.FirstVisit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChronicHistory")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CurrentChronicMedication")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DoctorNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorNumber1")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("KnownAllegies")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("VisitId");

                    b.HasIndex("DoctorNumber1");

                    b.ToTable("FirstVisit");
                });

            modelBuilder.Entity("hms_api.Models.MedicalPractice", b =>
                {
                    b.Property<string>("PracticeNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PracticeNumber");

                    b.ToTable("MedicalPractice");
                });

            modelBuilder.Entity("hms_api.Models.Medication", b =>
                {
                    b.Property<string>("MedicationNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ActiveEngredients")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContraIndicationR")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Schedule")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Strengths")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MedicationNumber");

                    b.ToTable("Medication");
                });

            modelBuilder.Entity("hms_api.Models.Patient", b =>
                {
                    b.Property<string>("PatientNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PatientAddress")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PatientContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("PatientDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PatientSurname")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PatientNumber");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("hms_api.Models.Phamacist", b =>
                {
                    b.Property<string>("PhamacistNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhamacistContact")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhamacistEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhamacistName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhamacistRegistrationNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhamacistSurname")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhamacyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhamacyNumber1")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("PhamacistNumber");

                    b.HasIndex("PhamacyNumber1");

                    b.ToTable("Phamacist");
                });

            modelBuilder.Entity("hms_api.Models.Phamacy", b =>
                {
                    b.Property<string>("PhamacyNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhamacyContact")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhamacyEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PhamacyLicenceNumber")
                        .HasColumnType("int");

                    b.Property<string>("PhamacyName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PhamacyNumber");

                    b.ToTable("Phamacy");
                });

            modelBuilder.Entity("hms_api.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorNumber")
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Filled")
                        .HasColumnType("bit");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MedicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicationNumber1")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PatientNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientNumber1")
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("PrescriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Repetition")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PrescriptionId");

                    b.HasIndex("DoctorNumber");

                    b.HasIndex("MedicationNumber1");

                    b.HasIndex("PatientNumber1");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("hms_api.Models.User", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("email");

                    b.ToTable("User");
                });

            modelBuilder.Entity("hms_api.Models.FirstVisit", b =>
                {
                    b.HasOne("hms_api.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorNumber1");
                });

            modelBuilder.Entity("hms_api.Models.Phamacist", b =>
                {
                    b.HasOne("hms_api.Models.Phamacy", "Phamacy")
                        .WithMany()
                        .HasForeignKey("PhamacyNumber1");
                });

            modelBuilder.Entity("hms_api.Models.Prescription", b =>
                {
                    b.HasOne("hms_api.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorNumber");

                    b.HasOne("hms_api.Models.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationNumber1");

                    b.HasOne("hms_api.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientNumber1");
                });
#pragma warning restore 612, 618
        }
    }
}
